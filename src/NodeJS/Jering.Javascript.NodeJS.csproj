<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;net461</TargetFrameworks>
        <PackageId>Jering.Javascript.NodeJS</PackageId>
        <Authors>JeremyTCD</Authors>
        <Title>Invoke Javascript in NodeJS, from C#</Title>
        <Description>Jering.Javascript.NodeJS allows you to invoke javascript in NodeJS, from C#:
  - Use popular javascript libraries from your C# projects.
  - Invoke both in-memory and on-disk javascript.</Description>
        <Copyright>© Jering. All rights reserved.</Copyright>
        <PackageProjectUrl>https://github.com/JeringTech/Javascript.NodeJS</PackageProjectUrl>
        <PackageLicenseUrl>$(PackageProjectUrl)/blob/master/License.txt</PackageLicenseUrl>
        <PackageReleaseNotes>$(PackageProjectUrl)/blob/master/Changelog.md</PackageReleaseNotes>
        <RepositoryUrl>$(PackageProjectUrl)</RepositoryUrl>
        <PackageTags>javascript nodejs</PackageTags>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
        <RepositoryType>git</RepositoryType>
        <LangVersion>7.3</LangVersion>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <CodeAnalysisRuleSet>../../Jering.Javascript.NodeJS.ruleset</CodeAnalysisRuleSet>
        <HttpServerBundleName>HttpServer.js</HttpServerBundleName>
        <!-- Exclude Javascript\bin and Javascript\node_modules from project - https://github.com/dotnet/cli/issues/7525 -->
        <DefaultItemExcludes>Javascript\bin\**;Javascript\node_modules\**;$(DefaultItemExcludes)</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <JavascriptInputs Include="Javascript\**" Exclude="$(DefaultItemExcludes)" />
        <!-- TODO if there are multiple outputs, e.g tcp server -->
        <JavascriptOutputs Include="Javascript\bin\$(Configuration)\$(HttpServerBundleName)" />
        <!-- If any file in JavascriptInputs has changed, fast up-to-date check must indicate that a rebuild is required - https://github.com/dotnet/project-system/pull/2241 -->
        <UpToDateCheckInput Include="@(JavascriptInputs)" />
        <!-- TODO if there are multiple outputs, e.g tcp server -->
        <EmbeddedResource Include="@(JavascriptOutputs)" LogicalName="$(HttpServerBundleName)" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Jering.IocServices.System.Net.Http" Version="0.3.0" />
        <PackageReference Include="Roslynator.Analyzers" Version="2.0.0" PrivateAssets="all" ExcludeAssets="Runtime">
          <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Roslynator.CodeFixes" Version="2.0.0" PrivateAssets="all" ExcludeAssets="Runtime">
          <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Yarn.MSBuild" Version="1.7.0" PrivateAssets="All" ExcludeAssets="Runtime" />
        <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
        <PackageReference Include="System.Buffers" Version="4.5.0" />
        <PackageReference Include="Microsoft.AspNetCore.Hosting.Abstractions" Version="2.1.1" />
        <PackageReference Include="Microsoft.Extensions.Logging" Version="2.1.1" />
        <PackageReference Include="Microsoft.Extensions.Options" Version="2.1.1" />
    </ItemGroup>

    <!-- TODO one target per bundle or one target for all bundles? will have to generalize webpack.config if one target per bundle. -->
    <Target Name="JavascriptBuild" BeforeTargets="DispatchToInnerBuilds" Inputs="@(JavascriptInputs)" Outputs="@(JavascriptOutputs)">
        <Yarn WorkingDirectory=".\Javascript" Command="run build --env.mode=$(Configuration) --env.entry=.\Servers\OutOfProcess\Http\HttpServer.ts" />
    </Target>

</Project>
